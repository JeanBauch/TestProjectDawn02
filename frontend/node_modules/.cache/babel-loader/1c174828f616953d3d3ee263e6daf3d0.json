{"ast":null,"code":"var _jsxFileName = \"F:\\\\Faculdade\\\\PA V\\\\TestProjectDawn02\\\\frontend\\\\src\\\\pages\\\\ProjectPage\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiPower } from 'react-icons/fi';\nimport { FiUser } from 'react-icons/fi';\nimport api from '../../services/api';\nimport './styles.css';\nimport logoImg from '../../assets/Logo.png';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar'; //import ListSubheader from '@material-ui/core/ListSubheader';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 'auto',\n    flexWrap: 'nowrap'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function ProjectPage() {\n  const [project, setProject] = useState({});\n  const [images, setImages] = useState([]);\n  const [vote, setVote] = useState(0);\n  const id = localStorage.getItem(\"projectID\");\n  const history = useHistory();\n  const [totalVote, setTotalVote] = useState(0);\n  const teamId = localStorage.getItem('teamId');\n  const teamName = localStorage.getItem('teamName');\n  const classes = useStyles();\n  useEffect(() => {\n    api.get('project', {\n      headers: {\n        id: id\n      }\n    }).then(response => {\n      setProject(response.data[0]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('images', {\n      headers: {\n        id: id\n      }\n    }).then(response => {\n      setImages(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('project/vote', {\n      headers: {\n        id_team: teamId,\n        id\n      }\n    }).then(response => {\n      if (response.data.length == 0) setVote(0);else setVote(response.data[0].vote);\n    });\n  }, [vote]);\n  useEffect(() => {\n    api.get(`/votes/${id}`).then(response => {\n      if (response.data != null) setTotalVote(response.data);\n    });\n  }, [vote]);\n\n  const handlePreventDefault = e => {\n    e.preventDefault();\n  };\n\n  async function handleVote(id_project, value) {\n    console.log(vote);\n\n    if (vote == 0) {\n      try {\n        const response = await api.post('/project/vote', {\n          data: {\n            id_team: teamId,\n            id_project,\n            vote: value\n          }\n        });\n      } catch (error) {\n        alert('Falha ao votar, tente novamente.');\n      }\n\n      console.log(vote);\n    } else {\n      try {\n        const response = await api.post('/project/vote/update', {\n          data: {\n            id_team: teamId,\n            id_project,\n            vote: value\n          }\n        });\n      } catch (error) {\n        alert('Falha ao atualizar, tente novamente.');\n      }\n    }\n  }\n\n  function handleLogout() {\n    localStorage.clear();\n    history.push('/home');\n  }\n\n  function handleProfile() {\n    if (teamId == null) history.push('/login');else history.push('/profile');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    id: \"btnHome\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Project Dawn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Bem vindo, \", teamName), /*#__PURE__*/React.createElement(Link, {\n    className: \"buttonHmCadastro\",\n    to: \"/projects/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Cadastrar novo caso\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleProfile,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiUser, {\n    size: 20,\n    color: \"#00E0FF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiPower, {\n    size: 20,\n    color: \"#00E0FF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"principal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"imageLogo\",\n    src: project.url,\n    alt: \"Logo do Projeto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, project.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, teamId ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"votar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    marginRight: \"20px\",\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, \"Votar\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    value: vote,\n    onChange: (event, newValue) => {\n      setVote(newValue);\n      handleVote(project.id, newValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }))) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 31\n    }\n  }, \"Fazer login para votar\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"votos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    marginLeft: \"20px\",\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, \"Total de votos\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"read-only\",\n    value: totalVote,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    className: classes.gridList,\n    cols: images.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, images.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"imageList\",\n    src: tile.url,\n    alt: tile.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: tile.name,\n    classes: {\n      root: classes.titleBar,\n      title: classes.title\n    },\n    actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": `info about ${tile.url}`,\n      href: tile.url,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InfoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  })))))))));\n}","map":{"version":3,"sources":["F:/Faculdade/PA V/TestProjectDawn02/frontend/src/pages/ProjectPage/index.js"],"names":["React","useState","useEffect","Link","useHistory","FiPower","FiUser","api","logoImg","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","InfoIcon","Rating","Typography","Box","useStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","icon","color","ProjectPage","project","setProject","images","setImages","vote","setVote","id","localStorage","getItem","history","totalVote","setTotalVote","teamId","teamName","classes","get","headers","then","response","data","id_team","length","handlePreventDefault","e","preventDefault","handleVote","id_project","value","console","log","post","error","alert","handleLogout","clear","push","handleProfile","title","url","description","event","newValue","map","tile","key","name","titleBar"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiPower } from 'react-icons/fi';\r\nimport { FiUser } from 'react-icons/fi';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\nimport logoImg from '../../assets/Logo.png';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\n//import ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      \r\n    },\r\n    gridList: {\r\n      \r\n      width:'auto',\r\n      flexWrap: 'nowrap',\r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n  }));\r\n\r\nexport default function ProjectPage()\r\n{\r\n    const [project,setProject] = useState({});\r\n    const [images,setImages] = useState([]);\r\n    const [vote,setVote] = useState(0);\r\n    const id = localStorage.getItem(\"projectID\");\r\n    const history = useHistory();\r\n    const [totalVote,setTotalVote] = useState(0);\r\n\r\n    const teamId = localStorage.getItem('teamId');\r\n    const teamName = localStorage.getItem('teamName');\r\n\r\n    const classes = useStyles();\r\n\r\n    \r\n    useEffect(() => {\r\n        api.get('project', {\r\n            headers: {\r\n                id: id,\r\n            }\r\n        }).then(response => {\r\n            setProject(response.data[0]);\r\n         })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get('images', {\r\n            headers: {\r\n                id: id,\r\n            }\r\n        }).then(response => {\r\n            setImages(response.data);\r\n          \r\n        })\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        api.get('project/vote',{\r\n            headers:{\r\n                id_team:teamId,\r\n                id,\r\n            }\r\n        }).then(response =>{\r\n            if(response.data.length == 0)\r\n                setVote(0);\r\n            else\r\n                setVote(response.data[0].vote);\r\n\r\n        })\r\n    },[vote]);\r\n\r\n    useEffect(()=>{\r\n        api.get(`/votes/${id}`).then(response =>{\r\n           if(response.data != null)\r\n                setTotalVote(response.data);\r\n   \r\n        })\r\n    },[vote]);\r\n\r\n\r\n    const handlePreventDefault = e =>{\r\n        e.preventDefault();\r\n    }\r\n    \r\n    async function handleVote(id_project,value){\r\n        console.log(vote);\r\n        if(vote == 0)\r\n        {\r\n            try{\r\n                const response = await api.post('/project/vote',{\r\n                    data:{\r\n                        id_team: teamId,\r\n                        id_project,\r\n                        vote:value,\r\n                    }   \r\n                })\r\n    \r\n            }catch(error){\r\n                alert('Falha ao votar, tente novamente.');\r\n            }\r\n            console.log(vote);\r\n        \r\n        }\r\n        else\r\n        {\r\n            try{\r\n                const response = await api.post('/project/vote/update',{\r\n                    data:{\r\n                        id_team: teamId,\r\n                        id_project,\r\n                        vote:value,\r\n                    }   \r\n                })\r\n    \r\n            }catch(error){\r\n                alert('Falha ao atualizar, tente novamente.');\r\n            }\r\n        }\r\n          \r\n\r\n    }\r\n\r\n    function handleLogout() {\r\n        localStorage.clear();\r\n        history.push('/home');\r\n    }\r\n\r\n    function handleProfile() {\r\n        if(teamId==null)\r\n            history.push('/login');\r\n        else\r\n            history.push('/profile');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"header-container\">\r\n            <header>\r\n                <Link id=\"btnHome\" to=\"/home\">\r\n                    <img src={logoImg} alt=\"Project Dawn\" />\r\n                </Link>\r\n                <span>Bem vindo, {teamName}</span>\r\n\r\n                <Link className=\"buttonHmCadastro\" to=\"/projects/new\">Cadastrar novo caso</Link>\r\n                <button onClick={handleProfile} type=\"button\">\r\n                    <FiUser size={20} color=\"#00E0FF\" />\r\n                </button>\r\n\r\n                <button onClick={handleLogout} type=\"button\">\r\n                    <FiPower size={20} color=\"#00E0FF\" />\r\n                </button>\r\n            </header>\r\n        </div>\r\n      \r\n        \r\n            <div className=\"project-container\">\r\n                \r\n                <div className=\"infos\">\r\n                    <div className=\"principal\">\r\n                        <p id=\"title\">{project.title}</p>\r\n                        <img id=\"imageLogo\" src={project.url} alt=\"Logo do Projeto\"></img>\r\n                        <p className=\"description\">{project.description}</p>\r\n                        <div className=\"vote\">\r\n                            {\r\n                            teamId \r\n                            ?  <div id=\"votar\">\r\n                                    <Box component=\"fieldset\" mb={3} marginRight=\"20px\" borderColor=\"transparent\">\r\n                                    <Typography component=\"legend\">Votar</Typography>\r\n                                    <Rating\r\n                                        name=\"simple-controlled\"\r\n                                        value={vote}\r\n                                        onChange={(event, newValue) => {\r\n                                        setVote(newValue);\r\n                                        handleVote(project.id,newValue);\r\n                                    }}\r\n                                    />\r\n                                    </Box>\r\n                                </div>\r\n                            : <Link  to=\"/login\" width=\"100px\">Fazer login para votar</Link>\r\n                            }\r\n                          \r\n                            <div id=\"votos\">\r\n                                <Box component=\"fieldset\" mb={3} marginLeft=\"20px\" borderColor=\"transparent\">\r\n                                    <Typography component=\"legend\">Total de votos</Typography>\r\n                                    <Rating name=\"read-only\" value={totalVote} readOnly />\r\n                                </Box>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                    <div className=\"images\">\r\n                    <div className={classes.root}>\r\n                    <GridList className={classes.gridList} cols={images.length} >\r\n                        {images.map((tile) => (\r\n                        <GridListTile key={tile.key}>\r\n                            <img id=\"imageList\" src={tile.url} alt={tile.name}  />\r\n                            <GridListTileBar\r\n                            title={tile.name}\r\n                            classes={{\r\n                                root: classes.titleBar,\r\n                                title: classes.title,\r\n                            }}\r\n                            actionIcon={\r\n                                <IconButton aria-label={`info about ${tile.url}`} href={tile.url} className={classes.icon}>\r\n                                <InfoIcon />\r\n                                </IconButton>\r\n                            }\r\n                            />\r\n                        </GridListTile>\r\n                        ))}\r\n                        \r\n                    </GridList>\r\n            </div>\r\n                  \r\n                    </div>\r\n    \r\n                </div>\r\n                \r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}