{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projetos\\\\Aplica\\xE7\\xE3oWeb (OmniStack)\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Header from './Header';\n\nfunction App() {\n  const [counter, setCounter] = useState(0); // O estado é para alterar no interface, o iseState retornam um array\n  // Para informações que refletem no front-end, nunca usar variavel, e sim estados (useState)\n\n  function increment() {\n    setCounter(counter + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \" Contador: \", counter, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Incrementar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Projetos/AplicaçãoWeb (OmniStack)/frontend/src/App.js"],"names":["React","useState","Header","App","counter","setCounter","increment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC,CADa,CACkC;AAC/C;;AAEA,WAASK,SAAT,GAAqB;AACnBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoBA,OAApB,MADF,eAEE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAOD;;AACD,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\n\nfunction App() {\n  const [counter, setCounter] = useState(0);     // O estado é para alterar no interface, o iseState retornam um array\n  // Para informações que refletem no front-end, nunca usar variavel, e sim estados (useState)\n\n  function increment() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    <div>\n      <Header> Contador: {counter} </Header>\n      <button onClick={increment}>Incrementar</button>\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}